// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots TimeRange No Range Given 1`] = `
<TimeRange
  onChange={[Function]}
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(ButtonGroup))
      classes={
        Object {
          "contained": "makeStyles-buttonGroup-2",
        }
      }
    >
      <ForwardRef(ButtonGroup)
        classes={
          Object {
            "contained": "MuiButtonGroup-contained makeStyles-buttonGroup-2",
            "disabled": "Mui-disabled",
            "fullWidth": "MuiButtonGroup-fullWidth",
            "grouped": "MuiButtonGroup-grouped",
            "groupedContained": "MuiButtonGroup-groupedContained",
            "groupedContainedHorizontal": "MuiButtonGroup-groupedContainedHorizontal",
            "groupedContainedPrimary": "MuiButtonGroup-groupedContainedPrimary",
            "groupedContainedSecondary": "MuiButtonGroup-groupedContainedSecondary",
            "groupedContainedVertical": "MuiButtonGroup-groupedContainedVertical",
            "groupedHorizontal": "MuiButtonGroup-groupedHorizontal",
            "groupedOutlined": "MuiButtonGroup-groupedOutlined",
            "groupedOutlinedHorizontal": "MuiButtonGroup-groupedOutlinedHorizontal",
            "groupedOutlinedPrimary": "MuiButtonGroup-groupedOutlinedPrimary",
            "groupedOutlinedSecondary": "MuiButtonGroup-groupedOutlinedSecondary",
            "groupedOutlinedVertical": "MuiButtonGroup-groupedOutlinedVertical",
            "groupedText": "MuiButtonGroup-groupedText",
            "groupedTextHorizontal": "MuiButtonGroup-groupedTextHorizontal",
            "groupedTextPrimary": "MuiButtonGroup-groupedTextPrimary",
            "groupedTextSecondary": "MuiButtonGroup-groupedTextSecondary",
            "groupedTextVertical": "MuiButtonGroup-groupedTextVertical",
            "groupedVertical": "MuiButtonGroup-groupedVertical",
            "root": "MuiButtonGroup-root",
            "vertical": "MuiButtonGroup-vertical",
          }
        }
      >
        <div
          className="MuiButtonGroup-root"
          role="group"
        >
          <WithStyles(ForwardRef(Button))
            className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-3"
            color="default"
            disableFocusRipple={false}
            disableRipple={false}
            disabled={false}
            fullWidth={false}
            key=".0"
            onClick={[Function]}
            size="medium"
            variant="outlined"
          >
            <ForwardRef(Button)
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-3"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit",
                  "contained": "MuiButton-contained",
                  "containedPrimary": "MuiButton-containedPrimary",
                  "containedSecondary": "MuiButton-containedSecondary",
                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                  "disableElevation": "MuiButton-disableElevation",
                  "disabled": "Mui-disabled",
                  "endIcon": "MuiButton-endIcon",
                  "focusVisible": "Mui-focusVisible",
                  "fullWidth": "MuiButton-fullWidth",
                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                  "label": "MuiButton-label",
                  "outlined": "MuiButton-outlined",
                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                  "root": "MuiButton-root",
                  "sizeLarge": "MuiButton-sizeLarge",
                  "sizeSmall": "MuiButton-sizeSmall",
                  "startIcon": "MuiButton-startIcon",
                  "text": "MuiButton-text",
                  "textPrimary": "MuiButton-textPrimary",
                  "textSecondary": "MuiButton-textSecondary",
                  "textSizeLarge": "MuiButton-textSizeLarge",
                  "textSizeSmall": "MuiButton-textSizeSmall",
                }
              }
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-3"
                component="button"
                disableRipple={false}
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={[Function]}
                type="button"
              >
                <ForwardRef(ButtonBase)
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-3"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-3"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      <ForwardRef
                        className="makeStyles-calendarIcon-4"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          className="makeStyles-calendarIcon-4"
                        >
                          <ForwardRef(SvgIcon)
                            className="makeStyles-calendarIcon-4"
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                          >
                            <svg
                              aria-hidden="true"
                              className="MuiSvgIcon-root makeStyles-calendarIcon-4"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                    </span>
                    <NoSsr>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </NoSsr>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(Button)>
          </WithStyles(ForwardRef(Button))>
          <WithStyles(ForwardRef(Button))
            className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-5"
            color="default"
            disableFocusRipple={false}
            disableRipple={false}
            disabled={false}
            fullWidth={false}
            key=".1"
            onClick={[Function]}
            size="medium"
            variant="outlined"
          >
            <ForwardRef(Button)
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-5"
              classes={
                Object {
                  "colorInherit": "MuiButton-colorInherit",
                  "contained": "MuiButton-contained",
                  "containedPrimary": "MuiButton-containedPrimary",
                  "containedSecondary": "MuiButton-containedSecondary",
                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                  "disableElevation": "MuiButton-disableElevation",
                  "disabled": "Mui-disabled",
                  "endIcon": "MuiButton-endIcon",
                  "focusVisible": "Mui-focusVisible",
                  "fullWidth": "MuiButton-fullWidth",
                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                  "label": "MuiButton-label",
                  "outlined": "MuiButton-outlined",
                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                  "root": "MuiButton-root",
                  "sizeLarge": "MuiButton-sizeLarge",
                  "sizeSmall": "MuiButton-sizeSmall",
                  "startIcon": "MuiButton-startIcon",
                  "text": "MuiButton-text",
                  "textPrimary": "MuiButton-textPrimary",
                  "textSecondary": "MuiButton-textSecondary",
                  "textSizeLarge": "MuiButton-textSizeLarge",
                  "textSizeSmall": "MuiButton-textSizeSmall",
                }
              }
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <WithStyles(ForwardRef(ButtonBase))
                className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-5"
                component="button"
                disableRipple={false}
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                onClick={[Function]}
                type="button"
              >
                <ForwardRef(ButtonBase)
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-5"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <button
                    className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-5"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiButton-label"
                    >
                      時間不限
                    </span>
                    <NoSsr>
                      <WithStyles(memo)
                        center={false}
                      >
                        <ForwardRef(TouchRipple)
                          center={false}
                          classes={
                            Object {
                              "child": "MuiTouchRipple-child",
                              "childLeaving": "MuiTouchRipple-childLeaving",
                              "childPulsate": "MuiTouchRipple-childPulsate",
                              "ripple": "MuiTouchRipple-ripple",
                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                              "root": "MuiTouchRipple-root",
                            }
                          }
                        >
                          <span
                            className="MuiTouchRipple-root"
                          >
                            <TransitionGroup
                              childFactory={[Function]}
                              component={null}
                              exit={true}
                            />
                          </span>
                        </ForwardRef(TouchRipple)>
                      </WithStyles(memo)>
                    </NoSsr>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(Button)>
          </WithStyles(ForwardRef(Button))>
        </div>
      </ForwardRef(ButtonGroup)>
    </WithStyles(ForwardRef(ButtonGroup))>
    <WithStyles(ForwardRef(Menu))
      anchorEl={null}
      id="time-range"
      keepMounted={true}
      onClose={[Function]}
      open={false}
    >
      <ForwardRef(Menu)
        anchorEl={null}
        classes={
          Object {
            "list": "MuiMenu-list",
            "paper": "MuiMenu-paper",
          }
        }
        id="time-range"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <WithStyles(ForwardRef(Popover))
          PaperProps={
            Object {
              "classes": Object {
                "root": "MuiMenu-paper",
              },
            }
          }
          anchorEl={null}
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          getContentAnchorEl={[Function]}
          id="time-range"
          keepMounted={true}
          onClose={[Function]}
          onEntering={[Function]}
          open={false}
          transformOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          transitionDuration="auto"
        >
          <ForwardRef(Popover)
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            classes={
              Object {
                "paper": "MuiPopover-paper",
                "root": "MuiPopover-root",
              }
            }
            getContentAnchorEl={[Function]}
            id="time-range"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Modal)
              BackdropProps={
                Object {
                  "invisible": true,
                }
              }
              className="MuiPopover-root"
              id="time-range"
              keepMounted={true}
              onClose={[Function]}
              open={false}
            >
              <ForwardRef(Portal)
                disablePortal={false}
              >
                <Portal
                  containerInfo={
                    <body>
                      <div
                        aria-hidden="true"
                        class="MuiPopover-root"
                        id="time-range"
                        role="presentation"
                        style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                      >
                        <div
                          data-test="sentinelStart"
                          tabindex="0"
                        />
                        <div
                          class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                          style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                          tabindex="-1"
                        >
                          <ul
                            class="MuiList-root MuiMenu-list MuiList-padding"
                            role="menu"
                            tabindex="-1"
                          >
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              data-ga="MenuItem(all)"
                              role="menuitem"
                              tabindex="0"
                            >
                              時間不限
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              data-ga="MenuItem(now-1d/d)"
                              role="menuitem"
                              tabindex="-1"
                            >
                              一天內
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              data-ga="MenuItem(now-1w/d)"
                              role="menuitem"
                              tabindex="-1"
                            >
                              一週內
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              data-ga="MenuItem(now-1m/d)"
                              role="menuitem"
                              tabindex="-1"
                            >
                              一個月內
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                            <li
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                              data-ga="MenuItem(custom)"
                              role="menuitem"
                              tabindex="-1"
                            >
                              自訂範圍
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </li>
                          </ul>
                        </div>
                        <div
                          data-test="sentinelEnd"
                          tabindex="0"
                        />
                      </div>
                    </body>
                  }
                >
                  <div
                    className="MuiPopover-root"
                    id="time-range"
                    onKeyDown={[Function]}
                    role="presentation"
                    style={
                      Object {
                        "bottom": 0,
                        "left": 0,
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "visibility": "hidden",
                        "zIndex": 1300,
                      }
                    }
                  >
                    <ForwardRef(SimpleBackdrop)
                      invisible={true}
                      onClick={[Function]}
                      open={false}
                    />
                    <TrapFocus
                      disableAutoFocus={false}
                      disableEnforceFocus={false}
                      disableRestoreFocus={false}
                      getDoc={[Function]}
                      isEnabled={[Function]}
                      open={false}
                    >
                      <div
                        data-test="sentinelStart"
                        tabIndex={0}
                      />
                      <ForwardRef(Grow)
                        appear={true}
                        in={false}
                        onEnter={[Function]}
                        onEntering={[Function]}
                        onExited={[Function]}
                        tabIndex="-1"
                        timeout="auto"
                      >
                        <Transition
                          addEndListener={[Function]}
                          appear={true}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          tabIndex="-1"
                          timeout={null}
                          unmountOnExit={false}
                        >
                          <WithStyles(ForwardRef(Paper))
                            className="MuiPopover-paper"
                            classes={
                              Object {
                                "root": "MuiMenu-paper",
                              }
                            }
                            elevation={8}
                            style={
                              Object {
                                "opacity": 0,
                                "transform": "scale(0.75, 0.5625)",
                                "visibility": "hidden",
                              }
                            }
                            tabIndex="-1"
                          >
                            <ForwardRef(Paper)
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "elevation0": "MuiPaper-elevation0",
                                  "elevation1": "MuiPaper-elevation1",
                                  "elevation10": "MuiPaper-elevation10",
                                  "elevation11": "MuiPaper-elevation11",
                                  "elevation12": "MuiPaper-elevation12",
                                  "elevation13": "MuiPaper-elevation13",
                                  "elevation14": "MuiPaper-elevation14",
                                  "elevation15": "MuiPaper-elevation15",
                                  "elevation16": "MuiPaper-elevation16",
                                  "elevation17": "MuiPaper-elevation17",
                                  "elevation18": "MuiPaper-elevation18",
                                  "elevation19": "MuiPaper-elevation19",
                                  "elevation2": "MuiPaper-elevation2",
                                  "elevation20": "MuiPaper-elevation20",
                                  "elevation21": "MuiPaper-elevation21",
                                  "elevation22": "MuiPaper-elevation22",
                                  "elevation23": "MuiPaper-elevation23",
                                  "elevation24": "MuiPaper-elevation24",
                                  "elevation3": "MuiPaper-elevation3",
                                  "elevation4": "MuiPaper-elevation4",
                                  "elevation5": "MuiPaper-elevation5",
                                  "elevation6": "MuiPaper-elevation6",
                                  "elevation7": "MuiPaper-elevation7",
                                  "elevation8": "MuiPaper-elevation8",
                                  "elevation9": "MuiPaper-elevation9",
                                  "outlined": "MuiPaper-outlined",
                                  "root": "MuiPaper-root MuiMenu-paper",
                                  "rounded": "MuiPaper-rounded",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <div
                                className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <ForwardRef(MenuList)
                                  actions={
                                    Object {
                                      "current": Object {
                                        "adjustStyleForScrollbar": [Function],
                                      },
                                    }
                                  }
                                  autoFocus={false}
                                  autoFocusItem={false}
                                  className="MuiMenu-list"
                                  onKeyDown={[Function]}
                                  variant="selectedMenu"
                                >
                                  <WithStyles(ForwardRef(List))
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    role="menu"
                                    tabIndex={-1}
                                  >
                                    <ForwardRef(List)
                                      className="MuiMenu-list"
                                      classes={
                                        Object {
                                          "dense": "MuiList-dense",
                                          "padding": "MuiList-padding",
                                          "root": "MuiList-root",
                                          "subheader": "MuiList-subheader",
                                        }
                                      }
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ul
                                        className="MuiList-root MuiMenu-list MuiList-padding"
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <WithStyles(ForwardRef(MenuItem))
                                          data-ga="MenuItem(all)"
                                          key=".$.$all"
                                          onClick={[Function]}
                                          tabIndex={0}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            data-ga="MenuItem(all)"
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              data-ga="MenuItem(all)"
                                              disableGutters={false}
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={0}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(all)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  data-ga="MenuItem(all)"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    data-ga="MenuItem(all)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-ga="MenuItem(all)"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      時間不限
                                                      <NoSsr>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </NoSsr>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                        <WithStyles(ForwardRef(MenuItem))
                                          data-ga="MenuItem(now-1d/d)"
                                          key=".$.$now-1d/d"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            data-ga="MenuItem(now-1d/d)"
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              data-ga="MenuItem(now-1d/d)"
                                              disableGutters={false}
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={-1}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1d/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  data-ga="MenuItem(now-1d/d)"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    data-ga="MenuItem(now-1d/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-ga="MenuItem(now-1d/d)"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      一天內
                                                      <NoSsr>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </NoSsr>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                        <WithStyles(ForwardRef(MenuItem))
                                          data-ga="MenuItem(now-1w/d)"
                                          key=".$.$now-1w/d"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            data-ga="MenuItem(now-1w/d)"
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              data-ga="MenuItem(now-1w/d)"
                                              disableGutters={false}
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={-1}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1w/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  data-ga="MenuItem(now-1w/d)"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    data-ga="MenuItem(now-1w/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-ga="MenuItem(now-1w/d)"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      一週內
                                                      <NoSsr>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </NoSsr>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                        <WithStyles(ForwardRef(MenuItem))
                                          data-ga="MenuItem(now-1m/d)"
                                          key=".$.$now-1m/d"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            data-ga="MenuItem(now-1m/d)"
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              data-ga="MenuItem(now-1m/d)"
                                              disableGutters={false}
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={-1}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1m/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  data-ga="MenuItem(now-1m/d)"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    data-ga="MenuItem(now-1m/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-ga="MenuItem(now-1m/d)"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      一個月內
                                                      <NoSsr>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </NoSsr>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                        <WithStyles(ForwardRef(MenuItem))
                                          data-ga="MenuItem(custom)"
                                          key=".$.$custom"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef(MenuItem)
                                            classes={
                                              Object {
                                                "dense": "MuiMenuItem-dense",
                                                "gutters": "MuiMenuItem-gutters",
                                                "root": "MuiMenuItem-root",
                                                "selected": "Mui-selected",
                                              }
                                            }
                                            data-ga="MenuItem(custom)"
                                            onClick={[Function]}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                }
                                              }
                                              component="li"
                                              data-ga="MenuItem(custom)"
                                              disableGutters={false}
                                              onClick={[Function]}
                                              role="menuitem"
                                              tabIndex={-1}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(custom)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                  component="li"
                                                  data-ga="MenuItem(custom)"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="li"
                                                    data-ga="MenuItem(custom)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <li
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      data-ga="MenuItem(custom)"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      自訂範圍
                                                      <NoSsr>
                                                        <WithStyles(memo)
                                                          center={false}
                                                        >
                                                          <ForwardRef(TouchRipple)
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </ForwardRef(TouchRipple)>
                                                        </WithStyles(memo)>
                                                      </NoSsr>
                                                    </li>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ForwardRef(MenuItem)>
                                        </WithStyles(ForwardRef(MenuItem))>
                                      </ul>
                                    </ForwardRef(List)>
                                  </WithStyles(ForwardRef(List))>
                                </ForwardRef(MenuList)>
                              </div>
                            </ForwardRef(Paper)>
                          </WithStyles(ForwardRef(Paper))>
                        </Transition>
                      </ForwardRef(Grow)>
                      <div
                        data-test="sentinelEnd"
                        tabIndex={0}
                      />
                    </TrapFocus>
                  </div>
                </Portal>
              </ForwardRef(Portal)>
            </ForwardRef(Modal)>
          </ForwardRef(Popover)>
        </WithStyles(ForwardRef(Popover))>
      </ForwardRef(Menu)>
    </WithStyles(ForwardRef(Menu))>
  </div>
</TimeRange>
`;

exports[`Storyshots TimeRange Set Range From Props 1`] = `
<div>
  <p>
    range = null:
  </p>
  <TimeRange
    onChange={[Function]}
    range={null}
  >
    <div
      className="makeStyles-root-134"
    >
      <WithStyles(ForwardRef(ButtonGroup))
        classes={
          Object {
            "contained": "makeStyles-buttonGroup-135",
          }
        }
      >
        <ForwardRef(ButtonGroup)
          classes={
            Object {
              "contained": "MuiButtonGroup-contained makeStyles-buttonGroup-135",
              "disabled": "Mui-disabled",
              "fullWidth": "MuiButtonGroup-fullWidth",
              "grouped": "MuiButtonGroup-grouped",
              "groupedContained": "MuiButtonGroup-groupedContained",
              "groupedContainedHorizontal": "MuiButtonGroup-groupedContainedHorizontal",
              "groupedContainedPrimary": "MuiButtonGroup-groupedContainedPrimary",
              "groupedContainedSecondary": "MuiButtonGroup-groupedContainedSecondary",
              "groupedContainedVertical": "MuiButtonGroup-groupedContainedVertical",
              "groupedHorizontal": "MuiButtonGroup-groupedHorizontal",
              "groupedOutlined": "MuiButtonGroup-groupedOutlined",
              "groupedOutlinedHorizontal": "MuiButtonGroup-groupedOutlinedHorizontal",
              "groupedOutlinedPrimary": "MuiButtonGroup-groupedOutlinedPrimary",
              "groupedOutlinedSecondary": "MuiButtonGroup-groupedOutlinedSecondary",
              "groupedOutlinedVertical": "MuiButtonGroup-groupedOutlinedVertical",
              "groupedText": "MuiButtonGroup-groupedText",
              "groupedTextHorizontal": "MuiButtonGroup-groupedTextHorizontal",
              "groupedTextPrimary": "MuiButtonGroup-groupedTextPrimary",
              "groupedTextSecondary": "MuiButtonGroup-groupedTextSecondary",
              "groupedTextVertical": "MuiButtonGroup-groupedTextVertical",
              "groupedVertical": "MuiButtonGroup-groupedVertical",
              "root": "MuiButtonGroup-root",
              "vertical": "MuiButtonGroup-vertical",
            }
          }
        >
          <div
            className="MuiButtonGroup-root"
            role="group"
          >
            <WithStyles(ForwardRef(Button))
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              key=".0"
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <ForwardRef(Button)
                className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="default"
                disableFocusRipple={false}
                disableRipple={false}
                disabled={false}
                fullWidth={false}
                onClick={[Function]}
                size="medium"
                variant="outlined"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        <ForwardRef
                          className="makeStyles-calendarIcon-137"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-calendarIcon-137"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-calendarIcon-137"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-calendarIcon-137"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                      </span>
                      <NoSsr>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </NoSsr>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
            <WithStyles(ForwardRef(Button))
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              key=".1"
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <ForwardRef(Button)
                className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="default"
                disableFocusRipple={false}
                disableRipple={false}
                disabled={false}
                fullWidth={false}
                onClick={[Function]}
                size="medium"
                variant="outlined"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        時間不限
                      </span>
                      <NoSsr>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </NoSsr>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
          </div>
        </ForwardRef(ButtonGroup)>
      </WithStyles(ForwardRef(ButtonGroup))>
      <WithStyles(ForwardRef(Menu))
        anchorEl={null}
        id="time-range"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Menu)
          anchorEl={null}
          classes={
            Object {
              "list": "MuiMenu-list",
              "paper": "MuiMenu-paper",
            }
          }
          id="time-range"
          keepMounted={true}
          onClose={[Function]}
          open={false}
        >
          <WithStyles(ForwardRef(Popover))
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            getContentAnchorEl={[Function]}
            id="time-range"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Popover)
              PaperProps={
                Object {
                  "classes": Object {
                    "root": "MuiMenu-paper",
                  },
                }
              }
              anchorEl={null}
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              classes={
                Object {
                  "paper": "MuiPopover-paper",
                  "root": "MuiPopover-root",
                }
              }
              getContentAnchorEl={[Function]}
              id="time-range"
              keepMounted={true}
              onClose={[Function]}
              onEntering={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              transitionDuration="auto"
            >
              <ForwardRef(Modal)
                BackdropProps={
                  Object {
                    "invisible": true,
                  }
                }
                className="MuiPopover-root"
                id="time-range"
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiPopover-root"
                      id="time-range"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "visibility": "hidden",
                          "zIndex": 1300,
                        }
                      }
                    >
                      <ForwardRef(SimpleBackdrop)
                        invisible={true}
                        onClick={[Function]}
                        open={false}
                      />
                      <TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={false}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Grow)
                          appear={true}
                          in={false}
                          onEnter={[Function]}
                          onEntering={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "root": "MuiMenu-paper",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiPopover-paper"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root MuiMenu-paper",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={8}
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <ForwardRef(MenuList)
                                    actions={
                                      Object {
                                        "current": Object {
                                          "adjustStyleForScrollbar": [Function],
                                        },
                                      }
                                    }
                                    autoFocus={false}
                                    autoFocusItem={false}
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    variant="selectedMenu"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      className="MuiMenu-list"
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ForwardRef(List)
                                        className="MuiMenu-list"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <ul
                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(all)"
                                            key=".$.$all"
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(all)"
                                              onClick={[Function]}
                                              tabIndex={0}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(all)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(all)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(all)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(all)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(all)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        時間不限
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1d/d)"
                                            key=".$.$now-1d/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1d/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1d/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1d/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1d/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1d/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1d/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一天內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1w/d)"
                                            key=".$.$now-1w/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1w/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1w/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1w/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1w/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1w/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1w/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一週內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1m/d)"
                                            key=".$.$now-1m/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1m/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1m/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1m/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1m/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1m/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1m/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一個月內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(custom)"
                                            key=".$.$custom"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(custom)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(custom)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(custom)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(custom)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(custom)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(custom)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        自訂範圍
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                        </ul>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </ForwardRef(MenuList)>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Grow)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Popover)>
          </WithStyles(ForwardRef(Popover))>
        </ForwardRef(Menu)>
      </WithStyles(ForwardRef(Menu))>
    </div>
  </TimeRange>
  <p>
    range = Object with GTE equal to option values:
  </p>
  <TimeRange
    onChange={[Function]}
    range={
      Object {
        "GTE": "now-1d/d",
      }
    }
  >
    <div
      className="makeStyles-root-134"
    >
      <WithStyles(ForwardRef(ButtonGroup))
        classes={
          Object {
            "contained": "makeStyles-buttonGroup-135",
          }
        }
      >
        <ForwardRef(ButtonGroup)
          classes={
            Object {
              "contained": "MuiButtonGroup-contained makeStyles-buttonGroup-135",
              "disabled": "Mui-disabled",
              "fullWidth": "MuiButtonGroup-fullWidth",
              "grouped": "MuiButtonGroup-grouped",
              "groupedContained": "MuiButtonGroup-groupedContained",
              "groupedContainedHorizontal": "MuiButtonGroup-groupedContainedHorizontal",
              "groupedContainedPrimary": "MuiButtonGroup-groupedContainedPrimary",
              "groupedContainedSecondary": "MuiButtonGroup-groupedContainedSecondary",
              "groupedContainedVertical": "MuiButtonGroup-groupedContainedVertical",
              "groupedHorizontal": "MuiButtonGroup-groupedHorizontal",
              "groupedOutlined": "MuiButtonGroup-groupedOutlined",
              "groupedOutlinedHorizontal": "MuiButtonGroup-groupedOutlinedHorizontal",
              "groupedOutlinedPrimary": "MuiButtonGroup-groupedOutlinedPrimary",
              "groupedOutlinedSecondary": "MuiButtonGroup-groupedOutlinedSecondary",
              "groupedOutlinedVertical": "MuiButtonGroup-groupedOutlinedVertical",
              "groupedText": "MuiButtonGroup-groupedText",
              "groupedTextHorizontal": "MuiButtonGroup-groupedTextHorizontal",
              "groupedTextPrimary": "MuiButtonGroup-groupedTextPrimary",
              "groupedTextSecondary": "MuiButtonGroup-groupedTextSecondary",
              "groupedTextVertical": "MuiButtonGroup-groupedTextVertical",
              "groupedVertical": "MuiButtonGroup-groupedVertical",
              "root": "MuiButtonGroup-root",
              "vertical": "MuiButtonGroup-vertical",
            }
          }
        >
          <div
            className="MuiButtonGroup-root"
            role="group"
          >
            <WithStyles(ForwardRef(Button))
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              key=".0"
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <ForwardRef(Button)
                className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="default"
                disableFocusRipple={false}
                disableRipple={false}
                disabled={false}
                fullWidth={false}
                onClick={[Function]}
                size="medium"
                variant="outlined"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        <ForwardRef
                          className="makeStyles-calendarIcon-137"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-calendarIcon-137"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-calendarIcon-137"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-calendarIcon-137"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                      </span>
                      <NoSsr>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </NoSsr>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
            <WithStyles(ForwardRef(Button))
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              key=".1"
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <ForwardRef(Button)
                className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="default"
                disableFocusRipple={false}
                disableRipple={false}
                disabled={false}
                fullWidth={false}
                onClick={[Function]}
                size="medium"
                variant="outlined"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-selectButton-138"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        一天內
                      </span>
                      <NoSsr>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </NoSsr>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
          </div>
        </ForwardRef(ButtonGroup)>
      </WithStyles(ForwardRef(ButtonGroup))>
      <WithStyles(ForwardRef(Menu))
        anchorEl={null}
        id="time-range"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Menu)
          anchorEl={null}
          classes={
            Object {
              "list": "MuiMenu-list",
              "paper": "MuiMenu-paper",
            }
          }
          id="time-range"
          keepMounted={true}
          onClose={[Function]}
          open={false}
        >
          <WithStyles(ForwardRef(Popover))
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            getContentAnchorEl={[Function]}
            id="time-range"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Popover)
              PaperProps={
                Object {
                  "classes": Object {
                    "root": "MuiMenu-paper",
                  },
                }
              }
              anchorEl={null}
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              classes={
                Object {
                  "paper": "MuiPopover-paper",
                  "root": "MuiPopover-root",
                }
              }
              getContentAnchorEl={[Function]}
              id="time-range"
              keepMounted={true}
              onClose={[Function]}
              onEntering={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              transitionDuration="auto"
            >
              <ForwardRef(Modal)
                BackdropProps={
                  Object {
                    "invisible": true,
                  }
                }
                className="MuiPopover-root"
                id="time-range"
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiPopover-root"
                      id="time-range"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "visibility": "hidden",
                          "zIndex": 1300,
                        }
                      }
                    >
                      <ForwardRef(SimpleBackdrop)
                        invisible={true}
                        onClick={[Function]}
                        open={false}
                      />
                      <TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={false}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Grow)
                          appear={true}
                          in={false}
                          onEnter={[Function]}
                          onEntering={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "root": "MuiMenu-paper",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiPopover-paper"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root MuiMenu-paper",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={8}
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <ForwardRef(MenuList)
                                    actions={
                                      Object {
                                        "current": Object {
                                          "adjustStyleForScrollbar": [Function],
                                        },
                                      }
                                    }
                                    autoFocus={false}
                                    autoFocusItem={false}
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    variant="selectedMenu"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      className="MuiMenu-list"
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ForwardRef(List)
                                        className="MuiMenu-list"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <ul
                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(all)"
                                            key=".$.$all"
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(all)"
                                              onClick={[Function]}
                                              tabIndex={0}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(all)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(all)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(all)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(all)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(all)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        時間不限
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1d/d)"
                                            key=".$.$now-1d/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1d/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1d/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1d/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1d/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1d/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1d/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一天內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1w/d)"
                                            key=".$.$now-1w/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1w/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1w/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1w/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1w/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1w/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1w/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一週內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1m/d)"
                                            key=".$.$now-1m/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1m/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1m/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1m/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1m/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1m/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1m/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一個月內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(custom)"
                                            key=".$.$custom"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(custom)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(custom)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(custom)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(custom)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(custom)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(custom)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        自訂範圍
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                        </ul>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </ForwardRef(MenuList)>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Grow)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Popover)>
          </WithStyles(ForwardRef(Popover))>
        </ForwardRef(Menu)>
      </WithStyles(ForwardRef(Menu))>
    </div>
  </TimeRange>
  <p>
    range = Object with \`GTE\` and \`LTE\`:
  </p>
  <TimeRange
    onChange={[Function]}
    range={
      Object {
        "GTE": "1989-06-04",
        "LTE": "2019-06-04",
      }
    }
  >
    <div
      className="makeStyles-root-134"
    >
      <WithStyles(ForwardRef(ButtonGroup))
        classes={
          Object {
            "contained": "makeStyles-buttonGroup-135",
          }
        }
      >
        <ForwardRef(ButtonGroup)
          classes={
            Object {
              "contained": "MuiButtonGroup-contained makeStyles-buttonGroup-135",
              "disabled": "Mui-disabled",
              "fullWidth": "MuiButtonGroup-fullWidth",
              "grouped": "MuiButtonGroup-grouped",
              "groupedContained": "MuiButtonGroup-groupedContained",
              "groupedContainedHorizontal": "MuiButtonGroup-groupedContainedHorizontal",
              "groupedContainedPrimary": "MuiButtonGroup-groupedContainedPrimary",
              "groupedContainedSecondary": "MuiButtonGroup-groupedContainedSecondary",
              "groupedContainedVertical": "MuiButtonGroup-groupedContainedVertical",
              "groupedHorizontal": "MuiButtonGroup-groupedHorizontal",
              "groupedOutlined": "MuiButtonGroup-groupedOutlined",
              "groupedOutlinedHorizontal": "MuiButtonGroup-groupedOutlinedHorizontal",
              "groupedOutlinedPrimary": "MuiButtonGroup-groupedOutlinedPrimary",
              "groupedOutlinedSecondary": "MuiButtonGroup-groupedOutlinedSecondary",
              "groupedOutlinedVertical": "MuiButtonGroup-groupedOutlinedVertical",
              "groupedText": "MuiButtonGroup-groupedText",
              "groupedTextHorizontal": "MuiButtonGroup-groupedTextHorizontal",
              "groupedTextPrimary": "MuiButtonGroup-groupedTextPrimary",
              "groupedTextSecondary": "MuiButtonGroup-groupedTextSecondary",
              "groupedTextVertical": "MuiButtonGroup-groupedTextVertical",
              "groupedVertical": "MuiButtonGroup-groupedVertical",
              "root": "MuiButtonGroup-root",
              "vertical": "MuiButtonGroup-vertical",
            }
          }
        >
          <div
            className="MuiButtonGroup-root"
            role="group"
          >
            <WithStyles(ForwardRef(Button))
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              key=".0"
              onClick={[Function]}
              size="medium"
              variant="outlined"
            >
              <ForwardRef(Button)
                className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                classes={
                  Object {
                    "colorInherit": "MuiButton-colorInherit",
                    "contained": "MuiButton-contained",
                    "containedPrimary": "MuiButton-containedPrimary",
                    "containedSecondary": "MuiButton-containedSecondary",
                    "containedSizeLarge": "MuiButton-containedSizeLarge",
                    "containedSizeSmall": "MuiButton-containedSizeSmall",
                    "disableElevation": "MuiButton-disableElevation",
                    "disabled": "Mui-disabled",
                    "endIcon": "MuiButton-endIcon",
                    "focusVisible": "Mui-focusVisible",
                    "fullWidth": "MuiButton-fullWidth",
                    "iconSizeLarge": "MuiButton-iconSizeLarge",
                    "iconSizeMedium": "MuiButton-iconSizeMedium",
                    "iconSizeSmall": "MuiButton-iconSizeSmall",
                    "label": "MuiButton-label",
                    "outlined": "MuiButton-outlined",
                    "outlinedPrimary": "MuiButton-outlinedPrimary",
                    "outlinedSecondary": "MuiButton-outlinedSecondary",
                    "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                    "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                    "root": "MuiButton-root",
                    "sizeLarge": "MuiButton-sizeLarge",
                    "sizeSmall": "MuiButton-sizeSmall",
                    "startIcon": "MuiButton-startIcon",
                    "text": "MuiButton-text",
                    "textPrimary": "MuiButton-textPrimary",
                    "textSecondary": "MuiButton-textSecondary",
                    "textSizeLarge": "MuiButton-textSizeLarge",
                    "textSizeSmall": "MuiButton-textSizeSmall",
                  }
                }
                color="default"
                disableFocusRipple={false}
                disableRipple={false}
                disabled={false}
                fullWidth={false}
                onClick={[Function]}
                size="medium"
                variant="outlined"
              >
                <WithStyles(ForwardRef(ButtonBase))
                  className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                  component="button"
                  disableRipple={false}
                  disabled={false}
                  focusRipple={true}
                  focusVisibleClassName="Mui-focusVisible"
                  onClick={[Function]}
                  type="button"
                >
                  <ForwardRef(ButtonBase)
                    className="MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                    classes={
                      Object {
                        "disabled": "Mui-disabled",
                        "focusVisible": "Mui-focusVisible",
                        "root": "MuiButtonBase-root",
                      }
                    }
                    component="button"
                    disableRipple={false}
                    disabled={false}
                    focusRipple={true}
                    focusVisibleClassName="Mui-focusVisible"
                    onClick={[Function]}
                    type="button"
                  >
                    <button
                      className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-calendarButton-136"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onDragLeave={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onKeyUp={[Function]}
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseUp={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <span
                        className="MuiButton-label"
                      >
                        <ForwardRef
                          className="makeStyles-calendarIcon-137"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            className="makeStyles-calendarIcon-137"
                          >
                            <ForwardRef(SvgIcon)
                              className="makeStyles-calendarIcon-137"
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                            >
                              <svg
                                aria-hidden="true"
                                className="MuiSvgIcon-root makeStyles-calendarIcon-137"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef>
                      </span>
                      <NoSsr>
                        <WithStyles(memo)
                          center={false}
                        >
                          <ForwardRef(TouchRipple)
                            center={false}
                            classes={
                              Object {
                                "child": "MuiTouchRipple-child",
                                "childLeaving": "MuiTouchRipple-childLeaving",
                                "childPulsate": "MuiTouchRipple-childPulsate",
                                "ripple": "MuiTouchRipple-ripple",
                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                "root": "MuiTouchRipple-root",
                              }
                            }
                          >
                            <span
                              className="MuiTouchRipple-root"
                            >
                              <TransitionGroup
                                childFactory={[Function]}
                                component={null}
                                exit={true}
                              />
                            </span>
                          </ForwardRef(TouchRipple)>
                        </WithStyles(memo)>
                      </NoSsr>
                    </button>
                  </ForwardRef(ButtonBase)>
                </WithStyles(ForwardRef(ButtonBase))>
              </ForwardRef(Button)>
            </WithStyles(ForwardRef(Button))>
            <input
              className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-startDate-139"
              color="default"
              disableFocusRipple={false}
              disableRipple={false}
              disabled={false}
              fullWidth={false}
              key=".1"
              onChange={[Function]}
              size="medium"
              type="date"
              value="1989-06-04"
              variant="outlined"
            >
              <input
                className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedOutlined MuiButtonGroup-groupedOutlinedHorizontal MuiButtonGroup-groupedOutlined makeStyles-startDate-139"
                onChange={[Function]}
                type="date"
                value="1989-06-04"
              />
            </input>
          </div>
        </ForwardRef(ButtonGroup)>
      </WithStyles(ForwardRef(ButtonGroup))>
      <span
        className="makeStyles-to-140"
      >
        到
      </span>
      <input
        className="makeStyles-endDate-141"
        onChange={[Function]}
        type="date"
        value="2019-06-04"
      />
      <WithStyles(ForwardRef(Menu))
        anchorEl={null}
        id="time-range"
        keepMounted={true}
        onClose={[Function]}
        open={false}
      >
        <ForwardRef(Menu)
          anchorEl={null}
          classes={
            Object {
              "list": "MuiMenu-list",
              "paper": "MuiMenu-paper",
            }
          }
          id="time-range"
          keepMounted={true}
          onClose={[Function]}
          open={false}
        >
          <WithStyles(ForwardRef(Popover))
            PaperProps={
              Object {
                "classes": Object {
                  "root": "MuiMenu-paper",
                },
              }
            }
            anchorEl={null}
            anchorOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            getContentAnchorEl={[Function]}
            id="time-range"
            keepMounted={true}
            onClose={[Function]}
            onEntering={[Function]}
            open={false}
            transformOrigin={
              Object {
                "horizontal": "left",
                "vertical": "top",
              }
            }
            transitionDuration="auto"
          >
            <ForwardRef(Popover)
              PaperProps={
                Object {
                  "classes": Object {
                    "root": "MuiMenu-paper",
                  },
                }
              }
              anchorEl={null}
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              classes={
                Object {
                  "paper": "MuiPopover-paper",
                  "root": "MuiPopover-root",
                }
              }
              getContentAnchorEl={[Function]}
              id="time-range"
              keepMounted={true}
              onClose={[Function]}
              onEntering={[Function]}
              open={false}
              transformOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              transitionDuration="auto"
            >
              <ForwardRef(Modal)
                BackdropProps={
                  Object {
                    "invisible": true,
                  }
                }
                className="MuiPopover-root"
                id="time-range"
                keepMounted={true}
                onClose={[Function]}
                open={false}
              >
                <ForwardRef(Portal)
                  disablePortal={false}
                >
                  <Portal
                    containerInfo={
                      <body>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                        <div
                          aria-hidden="true"
                          class="MuiPopover-root"
                          id="time-range"
                          role="presentation"
                          style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                        >
                          <div
                            data-test="sentinelStart"
                            tabindex="0"
                          />
                          <div
                            class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                            style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                            tabindex="-1"
                          >
                            <ul
                              class="MuiList-root MuiMenu-list MuiList-padding"
                              role="menu"
                              tabindex="-1"
                            >
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(all)"
                                role="menuitem"
                                tabindex="0"
                              >
                                時間不限
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1d/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一天內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1w/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一週內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(now-1m/d)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                一個月內
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                              <li
                                aria-disabled="false"
                                class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                data-ga="MenuItem(custom)"
                                role="menuitem"
                                tabindex="-1"
                              >
                                自訂範圍
                                <span
                                  class="MuiTouchRipple-root"
                                />
                              </li>
                            </ul>
                          </div>
                          <div
                            data-test="sentinelEnd"
                            tabindex="0"
                          />
                        </div>
                      </body>
                    }
                  >
                    <div
                      className="MuiPopover-root"
                      id="time-range"
                      onKeyDown={[Function]}
                      role="presentation"
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "position": "fixed",
                          "right": 0,
                          "top": 0,
                          "visibility": "hidden",
                          "zIndex": 1300,
                        }
                      }
                    >
                      <ForwardRef(SimpleBackdrop)
                        invisible={true}
                        onClick={[Function]}
                        open={false}
                      />
                      <TrapFocus
                        disableAutoFocus={false}
                        disableEnforceFocus={false}
                        disableRestoreFocus={false}
                        getDoc={[Function]}
                        isEnabled={[Function]}
                        open={false}
                      >
                        <div
                          data-test="sentinelStart"
                          tabIndex={0}
                        />
                        <ForwardRef(Grow)
                          appear={true}
                          in={false}
                          onEnter={[Function]}
                          onEntering={[Function]}
                          onExited={[Function]}
                          tabIndex="-1"
                          timeout="auto"
                        >
                          <Transition
                            addEndListener={[Function]}
                            appear={true}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            tabIndex="-1"
                            timeout={null}
                            unmountOnExit={false}
                          >
                            <WithStyles(ForwardRef(Paper))
                              className="MuiPopover-paper"
                              classes={
                                Object {
                                  "root": "MuiMenu-paper",
                                }
                              }
                              elevation={8}
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(Paper)
                                className="MuiPopover-paper"
                                classes={
                                  Object {
                                    "elevation0": "MuiPaper-elevation0",
                                    "elevation1": "MuiPaper-elevation1",
                                    "elevation10": "MuiPaper-elevation10",
                                    "elevation11": "MuiPaper-elevation11",
                                    "elevation12": "MuiPaper-elevation12",
                                    "elevation13": "MuiPaper-elevation13",
                                    "elevation14": "MuiPaper-elevation14",
                                    "elevation15": "MuiPaper-elevation15",
                                    "elevation16": "MuiPaper-elevation16",
                                    "elevation17": "MuiPaper-elevation17",
                                    "elevation18": "MuiPaper-elevation18",
                                    "elevation19": "MuiPaper-elevation19",
                                    "elevation2": "MuiPaper-elevation2",
                                    "elevation20": "MuiPaper-elevation20",
                                    "elevation21": "MuiPaper-elevation21",
                                    "elevation22": "MuiPaper-elevation22",
                                    "elevation23": "MuiPaper-elevation23",
                                    "elevation24": "MuiPaper-elevation24",
                                    "elevation3": "MuiPaper-elevation3",
                                    "elevation4": "MuiPaper-elevation4",
                                    "elevation5": "MuiPaper-elevation5",
                                    "elevation6": "MuiPaper-elevation6",
                                    "elevation7": "MuiPaper-elevation7",
                                    "elevation8": "MuiPaper-elevation8",
                                    "elevation9": "MuiPaper-elevation9",
                                    "outlined": "MuiPaper-outlined",
                                    "root": "MuiPaper-root MuiMenu-paper",
                                    "rounded": "MuiPaper-rounded",
                                  }
                                }
                                elevation={8}
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": "scale(0.75, 0.5625)",
                                    "visibility": "hidden",
                                  }
                                }
                                tabIndex="-1"
                              >
                                <div
                                  className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                  style={
                                    Object {
                                      "opacity": 0,
                                      "transform": "scale(0.75, 0.5625)",
                                      "visibility": "hidden",
                                    }
                                  }
                                  tabIndex="-1"
                                >
                                  <ForwardRef(MenuList)
                                    actions={
                                      Object {
                                        "current": Object {
                                          "adjustStyleForScrollbar": [Function],
                                        },
                                      }
                                    }
                                    autoFocus={false}
                                    autoFocusItem={false}
                                    className="MuiMenu-list"
                                    onKeyDown={[Function]}
                                    variant="selectedMenu"
                                  >
                                    <WithStyles(ForwardRef(List))
                                      className="MuiMenu-list"
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <ForwardRef(List)
                                        className="MuiMenu-list"
                                        classes={
                                          Object {
                                            "dense": "MuiList-dense",
                                            "padding": "MuiList-padding",
                                            "root": "MuiList-root",
                                            "subheader": "MuiList-subheader",
                                          }
                                        }
                                        onKeyDown={[Function]}
                                        role="menu"
                                        tabIndex={-1}
                                      >
                                        <ul
                                          className="MuiList-root MuiMenu-list MuiList-padding"
                                          onKeyDown={[Function]}
                                          role="menu"
                                          tabIndex={-1}
                                        >
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(all)"
                                            key=".$.$all"
                                            onClick={[Function]}
                                            tabIndex={0}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(all)"
                                              onClick={[Function]}
                                              tabIndex={0}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(all)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={0}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(all)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={0}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(all)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={0}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(all)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={0}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(all)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={0}
                                                      >
                                                        時間不限
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1d/d)"
                                            key=".$.$now-1d/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1d/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1d/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1d/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1d/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1d/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1d/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一天內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1w/d)"
                                            key=".$.$now-1w/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1w/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1w/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1w/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1w/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1w/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1w/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一週內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(now-1m/d)"
                                            key=".$.$now-1m/d"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(now-1m/d)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(now-1m/d)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(now-1m/d)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(now-1m/d)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(now-1m/d)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(now-1m/d)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        一個月內
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                          <WithStyles(ForwardRef(MenuItem))
                                            data-ga="MenuItem(custom)"
                                            key=".$.$custom"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(MenuItem)
                                              classes={
                                                Object {
                                                  "dense": "MuiMenuItem-dense",
                                                  "gutters": "MuiMenuItem-gutters",
                                                  "root": "MuiMenuItem-root",
                                                  "selected": "Mui-selected",
                                                }
                                              }
                                              data-ga="MenuItem(custom)"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItem))
                                                button={true}
                                                className="MuiMenuItem-root MuiMenuItem-gutters"
                                                classes={
                                                  Object {
                                                    "dense": "MuiMenuItem-dense",
                                                  }
                                                }
                                                component="li"
                                                data-ga="MenuItem(custom)"
                                                disableGutters={false}
                                                onClick={[Function]}
                                                role="menuitem"
                                                tabIndex={-1}
                                              >
                                                <ForwardRef(ListItem)
                                                  button={true}
                                                  className="MuiMenuItem-root MuiMenuItem-gutters"
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                      "button": "MuiListItem-button",
                                                      "container": "MuiListItem-container",
                                                      "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                      "disabled": "Mui-disabled",
                                                      "divider": "MuiListItem-divider",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "gutters": "MuiListItem-gutters",
                                                      "root": "MuiListItem-root",
                                                      "secondaryAction": "MuiListItem-secondaryAction",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  component="li"
                                                  data-ga="MenuItem(custom)"
                                                  disableGutters={false}
                                                  onClick={[Function]}
                                                  role="menuitem"
                                                  tabIndex={-1}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                    component="li"
                                                    data-ga="MenuItem(custom)"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                    role="menuitem"
                                                    tabIndex={-1}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="li"
                                                      data-ga="MenuItem(custom)"
                                                      disabled={false}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      onClick={[Function]}
                                                      role="menuitem"
                                                      tabIndex={-1}
                                                    >
                                                      <li
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                        data-ga="MenuItem(custom)"
                                                        onBlur={[Function]}
                                                        onClick={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        role="menuitem"
                                                        tabIndex={-1}
                                                      >
                                                        自訂範圍
                                                        <NoSsr>
                                                          <WithStyles(memo)
                                                            center={false}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={false}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(memo)>
                                                        </NoSsr>
                                                      </li>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(ListItem)>
                                              </WithStyles(ForwardRef(ListItem))>
                                            </ForwardRef(MenuItem)>
                                          </WithStyles(ForwardRef(MenuItem))>
                                        </ul>
                                      </ForwardRef(List)>
                                    </WithStyles(ForwardRef(List))>
                                  </ForwardRef(MenuList)>
                                </div>
                              </ForwardRef(Paper)>
                            </WithStyles(ForwardRef(Paper))>
                          </Transition>
                        </ForwardRef(Grow)>
                        <div
                          data-test="sentinelEnd"
                          tabIndex={0}
                        />
                      </TrapFocus>
                    </div>
                  </Portal>
                </ForwardRef(Portal)>
              </ForwardRef(Modal)>
            </ForwardRef(Popover)>
          </WithStyles(ForwardRef(Popover))>
        </ForwardRef(Menu)>
      </WithStyles(ForwardRef(Menu))>
    </div>
  </TimeRange>
</div>
`;
